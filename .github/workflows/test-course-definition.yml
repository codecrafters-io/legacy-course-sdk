name: Test Course Definition

on:
  workflow_call:

jobs:
  verify_templates_compiled:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'codecrafters-io/course-definition-tester'
          ref: 'rohitpaulk/try-docker'

      - uses: actions/checkout@v3
        with:
          path: courses/test_subject

      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - run: docker-compose build
      - run: docker-compose run tester ruby scripts/compile.rb courses/test_subject

      - run: git -C courses/test_subject diff --exit-code # Changes to existing files
      - run: test -z "$(git -C courses/test_subject ls-files compiled_starters/ --exclude-standard --others)" # Untracked files

  markdown_lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'codecrafters-io/course-definition-tester'
          ref: 'rohitpaulk/try-docker'

      - uses: actions/checkout@v3
        with:
          path: courses/test_subject

      - run: docker-compose build
      - run: docker-compose run tester mdl --style relaxed courses/test_subject/compiled_starters

  js_lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'codecrafters-io/course-definition-tester'
          ref: 'rohitpaulk/try-docker'

      - uses: actions/checkout@v3
        with:
          path: courses/test_subject

      - run: docker-compose build
      - run: docker-compose run tester prettier --check courses/test_subject/**/*.js

  rust_lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'codecrafters-io/course-definition-tester'
          ref: 'rohitpaulk/try-docker'

      - uses: actions/checkout@v3
        with:
          path: courses/test_subject

      - run: find courses/test_subject -name '*.rs' | xargs rustfmt --check

  identify_language_slugs:
    runs-on: ubuntu-latest

    outputs:
      language_slugs: ${{ steps.generate-language-slugs.outputs.language_slugs }}

    steps:
      - uses: actions/checkout@v3

      - name: Generate Language Slugs
        id: generate-language-slugs
        run: |
          LANGUAGE_SLUGS=$(ls solutions | xargs -I {} echo \"{}\" | jq -n '. |= [inputs]' | tr -d '\n')
          echo ::set-output name=language_slugs::${LANGUAGE_SLUGS}

  test:
    runs-on: ubuntu-latest

    needs:
      - identify_language_slugs

    strategy:
      matrix:
        language: ${{ fromJSON(needs.identify_language_slugs.outputs.language_slugs) }}

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'codecrafters-io/course-definition-tester'
          ref: 'rohitpaulk/try-docker'

      - uses: actions/checkout@v3
        with:
          path: courses/test_subject

      - run: "echo ::remove-matcher owner=go::" # Messes with our output

      - run: docker-compose build
      - run: docker-compose run tester ruby scripts/test.rb courses/test_subject ${{matrix.language}}

  validate-schemas:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'codecrafters-io/course-definition-tester'
          ref: 'rohitpaulk/try-docker'

      - uses: actions/checkout@v3
        with:
          path: courses/test_subject

      - run: docker-compose build
      - run: docker-compose run tester ajv validate --spec draft2020 -s schemas/course-definition.json -d courses/test_subject/course-definition.yml
      - run: ls courses/test_subject/solutions/*/*/definition.yml | xargs -P8 -n 1 ajv validate --spec draft2020 -s schemas/course-stage-solution-definition.json -d

