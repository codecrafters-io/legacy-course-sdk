name: Test Course Definition

on:
  workflow_call:
    inputs:
      sdkRef:
        required: false
        type: string
        default: main

jobs:
  verify_templates_compiled:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'codecrafters-io/course-sdk'
          ref: ${{inputs.sdkRef}}

      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: v3-template-compilation-{hash}
          restore-keys: |
            v3-template-compilation-

      - run: docker-compose build
      - run: docker-compose run tester ruby scripts/compile.rb courses/${{github.event.repository.name}}

      - name: "Ensure no uncommitted changes to compiled templates"
        run: git -C courses/${{github.event.repository.name}} diff --exit-code

      - name: "Print untracked files"
        run: git -C courses/${{github.event.repository.name}} ls-files compiled_starters/ --exclude-standard --others

      - name: "Ensure untracked files are empty (check previous step for list of files)"
        run: test -z "$(git -C courses/${{github.event.repository.name}} ls-files compiled_starters/ --exclude-standard --others)"

  markdown_lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'codecrafters-io/course-sdk'
          ref: ${{inputs.sdkRef}}

      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: v3-md-lint-{hash}
          restore-keys: |
            v3-md-lint-

      - run: docker-compose build
      - run: docker-compose run tester mdl --style relaxed courses/${{github.event.repository.name}}/compiled_starters

  go_lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      - run: test -z $(gofmt -l courses/${{github.event.repository.name}}) || (gofmt -l courses/${{github.event.repository.name}} && exit 1)

  js_lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'codecrafters-io/course-sdk'
          ref: ${{inputs.sdkRef}}

      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: v3-js-lint-{hash}
          restore-keys: |
            v3-js-lint-

      - run: docker-compose build
      - run: docker-compose run tester prettier --no-error-on-unmatched-pattern --check courses/${{github.event.repository.name}}/**/*.js

  rust_lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'codecrafters-io/course-sdk'
          ref: ${{inputs.sdkRef}}

      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      - run: find courses/${{github.event.repository.name}} -name '*.rs' | xargs rustfmt --edition "2021" --check

  identify_language_slugs:
    runs-on: ubuntu-latest

    outputs:
      language_slugs: ${{ steps.generate-language-slugs.outputs.language_slugs }}

    steps:
      - uses: actions/checkout@v3

      - name: Generate Language Slugs
        id: generate-language-slugs
        run: |
          LANGUAGE_SLUGS=$(ls solutions | jq -Rnc '[inputs]')
          echo ::set-output name=language_slugs::${LANGUAGE_SLUGS}

  test:
    runs-on: ubuntu-latest

    needs:
      - identify_language_slugs

    strategy:
      matrix:
        language: ${{ fromJSON(needs.identify_language_slugs.outputs.language_slugs) }}

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'codecrafters-io/course-sdk'
          ref: ${{inputs.sdkRef}}

      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      - run: "echo ::remove-matcher owner=go::" # Messes with our output

#      - uses: satackey/action-docker-layer-caching@v0.0.11
#        continue-on-error: true
#        with:
#          key: v3-test-${{matrix.language}}-{hash}
#          restore-keys: |
#            v3-test-${{matrix.language}}-
#
      - run: docker-compose build
      - run: docker-compose run -e GITHUB_TOKEN=${{github.token}} tester ruby scripts/test.rb courses/${{github.event.repository.name}} ${{matrix.language}}


  validate-schemas:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'codecrafters-io/course-sdk'
          ref: ${{inputs.sdkRef}}

      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: v3-validate-schemas-{hash}
          restore-keys: |
            v3-validate-schemas-

      - run: docker-compose build
      - run: docker-compose run tester ajv validate --spec draft2020 -s schemas/course-definition.json -d courses/${{github.event.repository.name}}/course-definition.yml
      - run: docker-compose run tester sh -c "ls courses/${{github.event.repository.name}}/solutions/*/*/definition.yml | xargs -P8 -n 1 ajv validate --spec draft2020 -s schemas/course-stage-solution-definition.json -d"

  validate-stages-naming:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'codecrafters-io/course-sdk'
          ref: ${{inputs.sdkRef}}

      - uses: actions/checkout@v3
        with:
          path: courses/${{github.event.repository.name}}

      - run: scripts/validate_stages_naming.sh "courses/${{github.event.repository.name}}"
